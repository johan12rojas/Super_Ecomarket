// Estructura de Base de Datos EcoMarket
// DBML Database Markup Language
// Docs: https://dbml.dbdiagram.io/docs

Project EcoMarket {
  database_type: 'MySQL'
  Note: '''
  # EcoMarket - Sistema de Supermercado Online
  
  Base de datos para el sistema EcoMarket que incluye:
  - Gestión de productos y categorías
  - Sistema de usuarios y pedidos
  - Carrito de compras
  - Métodos de pago y envío
  - Soft delete implementado
  - Indicadores de stock
  - Productos ecológicos
  '''
}

// ==============================================
// TABLAS PRINCIPALES
// ==============================================

Table categorias {
  id int [pk, increment, not null]
  nombre varchar(100) [not null]
  descripcion text
  icono varchar(100)
  fecha_creacion datetime [default: `now()`]
  
  Note: 'Categorías de productos (Frutas, Lácteos, Carnes, etc.)'
}

Table productos {
  id int [pk, increment, not null]
  nombre varchar(255) [not null]
  descripcion text
  precio decimal(10,2) [not null]
  imagen varchar(255)
  stock int [default: 0]
  categoria varchar(100) [not null]
  es_eco boolean [default: false]
  fecha_creacion datetime [default: `now()`]
  fecha_actualizacion datetime [default: `now()`]
  
  indexes {
    categoria
    es_eco
    stock
  }
  
  Note: '''
  Productos del supermercado
  - es_eco: Identifica productos ecológicos
  - stock: Cantidad disponible
  - categoria: Referencia a categorías
  '''
}

Table usuarios {
  id int [pk, increment, not null]
  nombre varchar(100) [not null]
  apellido varchar(100) [not null]
  email varchar(255) [unique, not null]
  telefono varchar(20)
  direccion text
  ciudad varchar(100)
  codigo_postal varchar(10)
  fecha_creacion datetime [default: `now()`]
  fecha_actualizacion datetime [default: `now()`]
  
  Note: 'Información de usuarios/clientes'
}

Table pedidos {
  id int [pk, increment, not null]
  id_usuario int [ref: > usuarios.id, not null]
  estado varchar(50) [default: 'pendiente']
  metodo_pago varchar(50) [not null]
  metodo_entrega varchar(50) [not null]
  costo_envio decimal(10,2) [default: 0]
  subtotal decimal(10,2) [not null]
  impuestos decimal(10,2) [default: 0]
  total decimal(10,2) [not null]
  eliminado int [default: 0]
  fecha_creacion datetime [default: `now()`]
  fecha_actualizacion datetime [default: `now()`]
  
  indexes {
    id_usuario
    estado
    eliminado
  }
  
  Note: '''
  Pedidos de usuarios
  - eliminado: Soft delete (0=activo, 1=eliminado)
  - estado: pendiente, procesando, completado, cancelado
  - metodo_pago: tarjeta_credito, contra_entrega
  - metodo_entrega: express, estandar, recoger_tienda
  '''
}

Table items_pedido {
  id int [pk, increment, not null]
  id_pedido int [ref: > pedidos.id, not null]
  id_producto int [ref: > productos.id, not null]
  cantidad int [not null]
  precio decimal(10,2) [not null]
  subtotal decimal(10,2) [not null]
  
  indexes {
    id_pedido
    id_producto
  }
  
  Note: 'Items individuales de cada pedido'
}

// ==============================================
// TABLAS DE SOPORTE
// ==============================================

Table metodos_envio {
  id int [pk, increment, not null]
  nombre varchar(100) [not null]
  costo decimal(10,2) [not null]
  descripcion text
  tiempo_estimado varchar(50)
  disponible boolean [default: true]
  
  Note: '''
  Métodos de envío disponibles
  - express: $9.99, 1-2 horas
  - estandar: $4.99, mismo día
  - recoger_tienda: $0.00, 2 horas
  '''
}

Table metodos_pago {
  id int [pk, increment, not null]
  nombre varchar(100) [not null]
  descripcion text
  disponible boolean [default: true]
  requiere_info_tarjeta boolean [default: false]
  
  Note: '''
  Métodos de pago disponibles
  - tarjeta_credito: Requiere información de tarjeta
  - contra_entrega: Pago contra entrega
  '''
}

Table items_carrito {
  id int [pk, increment, not null]
  id_usuario int [ref: > usuarios.id, not null]
  id_producto int [ref: > productos.id, not null]
  cantidad int [not null]
  fecha_creacion datetime [default: `now()`]
  fecha_actualizacion datetime [default: `now()`]
  
  indexes {
    id_usuario
    id_producto
  }
  
  Note: '''
  Items del carrito de compras
  - Persistencia temporal en BD
  - Se limpia después del checkout
  '''
}

// ==============================================
// TABLAS DE AUDITORÍA Y LOGS
// ==============================================

Table movimientos_stock {
  id int [pk, increment, not null]
  id_producto int [ref: > productos.id, not null]
  tipo_movimiento varchar(20) [not null]
  cantidad int [not null]
  stock_anterior int [not null]
  stock_nuevo int [not null]
  razon varchar(255)
  fecha_creacion datetime [default: `now()`]
  
  Note: '''
  Historial de movimientos de stock
  - tipo_movimiento: venta, reposicion, ajuste
  - razon: Motivo del movimiento
  '''
}

Table historial_estados_pedido {
  id int [pk, increment, not null]
  id_pedido int [ref: > pedidos.id, not null]
  estado_anterior varchar(50)
  estado_nuevo varchar(50) [not null]
  cambiado_por varchar(100)
  razon text
  fecha_creacion datetime [default: `now()`]
  
  Note: 'Historial de cambios de estado de pedidos'
}

// ==============================================
// ÍNDICES Y CONSTRAINTS
// ==============================================

// Las referencias están definidas directamente en las tablas
// No se requieren referencias adicionales

// ==============================================
// DATOS INICIALES (SEED DATA)
// ==============================================

Note seed_data_info {
  '''
DATOS INICIALES DEL SISTEMA:

Categorías iniciales:
- Frutas y Verduras
- Lácteos  
- Carnes
- Panadería
- Bebidas
- Snacks

Productos iniciales (47 productos):
- Variedad de categorías
- Diferentes niveles de stock
- Productos ecológicos marcados
- Precios realistas

Métodos de envío iniciales:
- Entrega Express: $9.99
- Entrega Estándar: $4.99
- Recoger en Tienda: $0.00

Métodos de pago iniciales:
- Tarjeta de Crédito
- Contra Entrega

CONFIGURACIÓN DE BASE DE DATOS:
- Motor: MySQL
- Puerto: 3306
- Archivo: supermercado.db
- Soft Delete: Implementado
- Migraciones: Automáticas
- Backup: Manual
  '''
}
